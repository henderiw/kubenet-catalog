apiVersion: choreo.kform.dev/v1alpha1
kind: Library
metadata:
  creationTimestamp: "2024-09-12T13:23:36Z"
  managedFields:
  - apiVersion: choreo.kform.dev/v1alpha1
    fieldsType: FieldsV1
    fieldsV1:
      f:spec:
        f:code: {}
        f:type: {}
      f:status: {}
    manager: inputfileloader
    operation: Apply
    time: "2024-09-12T13:23:36Z"
  name: infra.kuid.dev.nodes.star
  resourceVersion: "0"
  uid: b7c8d7b3-c327-4f4d-ae79-c4fbae11f707
spec:
  code: |-
    load("id.kuid.dev.id.star", "getNodeKeys")

    def getSpec(self):
      return self.get("spec", {})

    def getPartition(self):
      spec = getSpec(self)
      return spec.get("partition", "")

    def getProvider(self):
      spec = getSpec(self)
      return spec.get("provider", "")

    def getPlatformType(self):
      spec = getSpec(self)
      return spec.get("platformType", "")

    def getStatus(self):
      return self.get("status", {})

    def getNodeID(self):
      nodeKeys = getNodeKeys()
      spec = getSpec(self)
      nodeID = {}
      for key, val in spec.items():
        if key in nodeKeys:
          nodeID[key] = val
      return nodeID

    def getNode(name, namespace, spec):
      return {
        "apiVersion": "infra.kuid.dev/v1alpha1",
        "kind": "Node",
        "metadata": {
          "name": name,
          "namespace": namespace,
        },
        "spec": spec,
      }
  type: starlark
status: {}
